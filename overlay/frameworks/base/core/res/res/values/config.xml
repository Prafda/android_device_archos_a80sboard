<?xml version="1.0" encoding="utf-8"?>
<!--
/*
** Copyright 2009, The Android Open Source Project
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**     http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/
-->

<!-- These resources are around just to allow their values to be customized
     for different hardware and product builds. -->
<resources>

    <!-- This device is "voice capable"; -->
    <bool name="config_voice_capable">true</bool>

    <!-- This device allows sms service. -->
    <bool name="config_sms_capable">true</bool>


	 <!-- Separate software navigation bar required on this device. -->
	<bool name="config_showNavigationBar">true</bool>
	
    <bool name="config_sf_slowBlur">true</bool>

    <!-- XXXXX NOTE THE FOLLOWING RESOURCES USE THE WRONG NAMING CONVENTION.
         Please don't copy them, copy anything else. -->

    <!-- This string array should be overridden by the device to present a list of network
         attributes.  This is used by the connectivity manager to decide which networks can coexist
         based on the hardware -->
    <!-- An Array of "[Connection name],[ConnectivityManager connection type],
         [associated radio-type],[priority],[restoral-timer(ms)],[dependencyMet]  -->
    <!-- the 5th element "resore-time" indicates the number of milliseconds to delay
         before automatically restore the default connection.  Set -1 if the connection
         does not require auto-restore. -->
    <!-- the 6th element indicates boot-time dependency-met value. -->
   <string-array translatable="false" name="networkAttributes">
        <item>"wifi,1,1,2,-1,true"</item>
        <item>"mobile,0,0,1,-1,true"</item>
        <item>"mobile_mms,2,0,2,60000,true"</item>
        <item>"mobile_supl,3,0,2,60000,true"</item>
        <item>"mobile_dun,4,0,5,60000,true"</item>
        <item>"mobile_hipri,5,0,3,60000,true"</item>
        <item>"bluetooth,7,7,0,-1,true"</item>
        <item>"ethernet,9,9,9,-1,true"</item>
        <item>"mobile_fota,10,0,2,60000,true"</item>
        <item>"mobile_ims,11,0,2,-1,true"</item>
        <item>"mobile_cbs,12,0,2,60000,true"</item>
        <item>"wifi_p2p,13,1,0,-1,true"</item>
    </string-array>

    <!-- This string array should be overridden by the device to present a list of radio
         attributes.  This is used by the connectivity manager to decide which networks can coexist
         based on the hardware -->
    <!-- An Array of "[ConnectivityManager connectionType],
                      [# simultaneous connection types]"  -->
    <string-array translatable="false" name="radioAttributes" >
        <item>"9,1"</item>
        <item>"1,1"</item>
        <item>"0,1"</item>
        <item>"7,1"</item>
    </string-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         USB interfaces.  If the device doesn't want to support tething over USB this should
         be empty.  An example would be "usb.*" -->
    <string-array translatable="false" name="config_tether_usb_regexs">
        <item>"rndis0"</item>
    </string-array>

    <!-- Array of allowable ConnectivityManager network types for tethering -->
    <integer-array translatable="false" name="config_tether_upstream_types">
        <item>0</item>
        <item>1</item>
        <item>5</item>
        <item>7</item>
    </integer-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         Wifi interfaces.  If the device doesn't want to support tethering over Wifi this
         should be empty.  An example would be "softap.*" -->
    <string-array translatable="false" name="config_tether_wifi_regexs">
        <item>"wlan0"</item>
    </string-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         bluetooth interfaces.  If the device doesn't want to support tethering over bluetooth this
         should be empty. -->
    <string-array translatable="false" name="config_tether_bluetooth_regexs">
        <item>"bnep\\d"</item>
	</string-array>


	<!-- Device configuration setting the minfree tunable in the lowmemorykiller in the kernel. 
		  A high value will cause the lowmemorykiller to fire earlier, keeping more memory in the
		  file cache and preventing I/O thrashing, but allowing fewer processes to stay in memory. 
		  A low value will keep more processes in memory but may cause thrashing if set too low. 
		  Overrides the default value chosen by ActivityManager based on screen size and total memory
		  for the largest lowmemorykiller bucket, and scaled proportionally to the smaller buckets. 
		  -1 keeps the default. -->
	<integer name="config_lowMemoryKillerMinFreeKbytesAbsolute">-1</integer>

	<!-- Device configuration adjusting the minfree tunable in the lowmemorykiller in the kernel.
		  A high value will cause the lowmemorykiller to fire earlier, keeping more memory in the
		  file cache and preventing I/O thrashing, but allowing fewer processes to stay in memory.
		  A low value will keep more processes in memory but may cause thrashing if set too low.
		  Directly added to the default value chosen by ActivityManager based on screen size and total memory
		  for the largest lowmemorykiller bucket, and scaled proportionally to the smaller buckets. 
		  0 keeps the default. -->
	<integer name="config_lowMemoryKillerMinFreeKbytesAdjust">0</integer>

	<!-- Device configuration setting the /proc/sys/vm/extra_free_kbytes tunable in the kernel (if it exists). 
		  A high value will increase the amount of memory that the kernel tries to keep free, reducing allocation 
		  time and causing the lowmemorykiller to kill earlier. A low value allows more memory to be used by 
		  processes but may cause more allocations to block waiting on disk I/O or lowmemorykiller. Overrides the
		  default value chosen by ActivityManager based on screen size. 0 prevents keeping any extra memory over
		  what the kernel keeps by default. -1 keeps the default. -->
	<integer name="config_extraFreeKbytesAbsolute">-1</integer>

	<!-- Device configuration adjusting the /proc/sys/vm/extra_free_kbytes tunable in the kernel (if it exists). 
		  0 uses the default value chosen by ActivityManager. A positive value will increase the amount of memory 
		  that the kernel tries to keep free, reducing allocation time and causing the lowmemorykiller to kill earlier. 
		  A negative value allows more memory to be used by processes but may cause more allocations to block waiting 
		  on disk I/O or lowmemorykiller. Directly added to the default value chosen by ActivityManager based on screen size. -->
	<integer name="config_extraFreeKbytesAdjust">0</integer>


 <bool name="config_automatic_brightness_available">true</bool>

    <!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
         The N entries of this array define N + 1 zones as follows:

         Zone 0:        0 <= LUX < array[0]
         Zone 1:        array[0] <= LUX < array[1]
         ...
         Zone N:        array[N - 1] <= LUX < array[N]
         Zone N + 1:    array[N] <= LUX < infinity

         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
        <item>50</item>
        <item>100</item>
        <item>250</item>
        <item>1000</item>
        <item>3000</item>
    </integer-array>

    <!-- Array of output values for LCD backlight corresponding to the LUX values
         in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
    -->
    <integer-array name="config_autoBrightnessLcdBacklightValues">
        <item>50</item>
        <item>75</item>
        <item>100</item>
        <item>150</item>
        <item>200</item>
        <item>250</item>
    </integer-array>
    
	<!-- If true, the screen can be rotated via the accelerometer in all 4
         rotations as the default behavior. -->
    <bool name="config_allowAllRotations">true</bool>

    <!-- Whether safe headphone volume is enabled or not (country specific). -->
    <bool name="config_safe_media_volume_enabled">false</bool>

</resources>
